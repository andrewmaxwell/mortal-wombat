{"version":3,"file":"static/js/516.be635606.chunk.js","mappings":"yKAAO,IAAMA,EAAoB,CAC/BC,QAAS,QACTC,SAAU,OACVC,SAAU,OACVC,cAAe,MACfC,eAAgB,MAChBC,gBAAiB,gDACjBC,cAAe,mDACfC,QAAS,QACTC,OAAQ,MACRC,UAAW,QACXC,UAAW,MACXC,QAAS,KACTC,iBAAkB,MAClBC,UAAW,SACXC,KAAM,IACNC,UAAW,QACXC,UAAW,MACXC,cACE,kFAGSC,EAAmB,CAC9B,EAAG,CACDC,MAAO,QACPC,UAAU,EACVC,QAAQ,EACRC,QAAS,IACTC,GAAI,IACJC,GAAI,IACJC,MAAO,+CACPC,MAAO,QACPC,SAAU,IACVC,MAAO,IACPC,MAAO,kDAET,EAAG,CACDV,MAAO,cACPW,QAAS,KACTV,UAAU,EACVE,QAAS,IACTC,GAAI,IACJC,GAAI,IACJC,MACE,+FACFC,MAAO,OACPK,SAAS,EACTC,UAAW,IACXJ,MAAO,IACPC,MAAO,2DAET,EAAG,CACDV,MAAO,OACPK,GAAI,IACJC,MACE,+FACFC,MAAO,QACPE,MAAO,KAET,EAAG,CACDT,MAAO,MACPW,QAAS,MACTN,GAAI,IACJC,MACE,qFACFQ,aACE,qFACFC,aACE,qFACFC,aACE,qFACFC,aACE,qFACFC,eACE,qFACFX,MAAO,SACPE,MAAO,KAET,EAAG,CACDT,MAAO,SACPW,QAAS,IACTR,QAAS,QACTE,GAAI,IACJC,MACE,qFACFC,MAAO,QACPM,UAAW,KACXM,UAAW,SACXV,MAAO,KAET,EAAG,CACDW,aAAa,EACbpB,MAAO,OACPK,GAAI,IACJC,MAAO,mCACPC,MAAO,QACPE,MAAO,IACPC,MAAO,qDAET,EAAG,CACDV,MAAO,SACPW,QAAS,IACTV,UAAU,EACVoB,UAAW,IACXlB,QAAS,OACTC,GAAI,IACJC,GAAI,IACJC,MACE,+FACFC,MAAO,QACPM,UAAW,KACXM,UAAW,SACXV,MAAO,IACPC,MAAO,iDAET,EAAG,CACDV,MAAO,OACPW,QAAS,OACTN,GAAI,IACJC,MACE,qFACFC,MAAO,QACPM,UAAW,KACXM,UAAW,SACXV,MAAO,KAET,EAAG,CACDT,MAAO,UA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","sources":["defaults.js","firebase.js","game/main.js","game/elements.js","game/controls.js","game/gamepadControls.js","game/compile.js","game/Game.js","utils/isValidUrl.js","game/load.js","utils.js","utils/getBackground.js","utils/mergeDeepLeft.js"],"sourcesContent":["export const defaultGameConfig = {\n  airDrag: '0.001',\n  digSpeed: '0.05',\n  eatSpeed: '0.05',\n  fallDamageMin: '0.3',\n  fallDamageMult: '100',\n  fallDamageSound: 'https://static.heironimus.info/sound/Thud.ogg',\n  gameOverSound: 'https://static.heironimus.info/sound/YouDead.ogg',\n  gravity: '0.005',\n  health: '100',\n  jumpPower: '0.111',\n  maxHealth: '100',\n  maxPoop: '10',\n  moveDeceleration: '0.2',\n  moveSpeed: '0.0222',\n  poop: '0',\n  swimPower: '0.008',\n  waterDrag: '0.1',\n  backgroundUrl:\n    'https://i.ibb.co/ZLjf3Jb/imgonline-com-ua-Texture-Seamless-ef-Gzuxvyq-GO67.jpg',\n};\n\nexport const defaultTileTypes = {\n  0: {\n    color: 'green',\n    diggable: true,\n    edible: true,\n    healing: '5',\n    hp: '1',\n    id: 'g',\n    image: 'https://art.pixilart.com/sr2601896d34615.png',\n    label: 'grass',\n    makePoop: '1',\n    order: '1',\n    sound: 'https://static.heironimus.info/sound/Chomp.ogg',\n  },\n  1: {\n    color: 'saddleBrown',\n    density: '20',\n    diggable: true,\n    healing: '2',\n    hp: '1',\n    id: 'p',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/b0e07c73f8aa75e.png',\n    label: 'poop',\n    movable: true,\n    moveDelay: '2',\n    order: '2',\n    sound: 'https://static.heironimus.info/sound/SloppyPoopSoft.ogg',\n  },\n  2: {\n    color: 'gray',\n    id: 's',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/0041e8e715b1264.png',\n    label: 'stone',\n    order: '3',\n  },\n  3: {\n    color: 'red',\n    density: '1.1',\n    id: 'w',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/610cc71e-cdb9-11ec-8e05-2f9ec14027c3.gif',\n    walkingImage:\n      'https://piskel-imgstore-b.appspot.com/img/253fba5c-cdb9-11ec-acf8-2f9ec14027c3.gif',\n    pushingImage:\n      'https://piskel-imgstore-b.appspot.com/img/586bb7e6-cdb9-11ec-a846-2f9ec14027c3.gif',\n    jumpingImage:\n      'https://piskel-imgstore-b.appspot.com/img/4439c4fd-cdb9-11ec-9ce8-2f9ec14027c3.gif',\n    diggingImage:\n      'https://piskel-imgstore-b.appspot.com/img/3a751840-cdb9-11ec-8175-2f9ec14027c3.gif',\n    crouchingImage:\n      'https://piskel-imgstore-b.appspot.com/img/32ac8f9e-cdb9-11ec-9e05-2f9ec14027c3.gif',\n    label: 'wombat',\n    order: '4',\n  },\n  4: {\n    color: 'orange',\n    density: '2',\n    healing: '-0.73',\n    id: 'm',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/a3591080-d48c-11ec-adf0-83f7175e2efe.gif',\n    label: 'magma',\n    moveDelay: '30',\n    moveStyle: 'liquid',\n    order: '5',\n  },\n  5: {\n    collectible: true,\n    color: 'cyan',\n    id: 'j',\n    image: 'https://i.ibb.co/m6V89v5/gem.gif',\n    label: 'jewel',\n    order: '6',\n    sound: 'https://static.heironimus.info/sound/PinkFast.ogg',\n  },\n  6: {\n    color: 'purple',\n    density: '0',\n    diggable: true,\n    dropsLoot: 'j',\n    healing: '-0.5',\n    hp: '2',\n    id: 'k',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/2b956856674265a.png',\n    label: 'Koala',\n    moveDelay: '25',\n    moveStyle: 'patrol',\n    order: '7',\n    sound: 'https://static.heironimus.info/sound/Hiss.ogg',\n  },\n  7: {\n    color: 'blue',\n    density: '0.85',\n    id: 'a',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/ffce45fa-d85c-11ec-a908-a90a117b47b4.gif',\n    label: 'water',\n    moveDelay: '15',\n    moveStyle: 'liquid',\n    order: '8',\n  },\n  8: {\n    color: '#f04dd2',\n    density: '10',\n    id: 'o',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/e92587eb-df95-11ec-b289-d74eb3c6d4e4.gif',\n    label: 'polymer',\n    movable: true,\n    moveDelay: '90',\n    moveStyle: 'liquid',\n    order: '9',\n    sound: 'https://static.heironimus.info/sound/Boing.ogg',\n  },\n  9: {\n    color: 'red',\n    density: '1',\n    hp: '1',\n    id: 'n',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/6efea72003769ad.png',\n    label: 'NPC',\n    moveDelay: '10',\n    order: '10',\n  },\n  '-1': {\n    color: 'black',\n    id: '_delete',\n    label: 'delete',\n    order: '0',\n  },\n};\n","import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l5ybd0mu:2x3xfrsom4h';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadItem = async (key) => (await get(child(dbRef, key))).val();\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {GamepadControls} from './gamepadControls';\nimport {load} from './load';\n\nlet game,\n  controls,\n  isPaused = false;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    if (isPaused) {\n      isPaused = false;\n      document.body.style.opacity = 1;\n    }\n    const controlState = controls.getPressing();\n    if (!game.dialog.isOpen) game.iterate(controlState);\n  } else if (!isPaused) {\n    isPaused = true;\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  const onPress = (id) => {\n    if (game.dialog.isOpen) {\n      if (id === 'space' && game.dialog.hasChoices()) game.dialog.choose();\n      else game.dialog.next();\n    } else {\n      if (id === 'poop') game.makePoop();\n      else if (id === 'space') game.interact();\n    }\n  };\n  controls = new Controls({onPress}, rootElement, [\n    new GamepadControls({onPress}),\n  ]);\n  window.addEventListener('resize', () => {\n    game.updateViewport();\n  });\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst TILE_SIZE = 48;\nconst CHUNK_SIZE = 24;\n\nconst toChunkCoords = (x, y) => [\n  Math.floor(x / CHUNK_SIZE),\n  Math.floor(y / CHUNK_SIZE),\n];\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nclass Chunk extends Element {\n  constructor(parentElement, x, y) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.el.classList.add('chunk');\n    parentElement.append(this.el);\n  }\n  updateVisibility(x, y) {\n    const shouldShow = Math.abs(x - this.x) < 2 && Math.abs(y - this.y) < 2;\n    this.el.title = `chunk ${this.x}_${this.y} ${x} ${y}`;\n    if (shouldShow !== this.isShowing) {\n      this.isShowing = shouldShow;\n      this.el.style.display = shouldShow ? 'block' : 'none';\n    }\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    this.chunks = {};\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const [chunkX, chunkY] = toChunkCoords(you.x, you.y);\n    if (chunkX !== you.chunkX || chunkY !== you.chunkY) {\n      you.chunkX = chunkX;\n      you.chunkY = chunkY;\n      for (const key in this.chunks) {\n        this.chunks[key].updateVisibility(chunkX, chunkY);\n      }\n    }\n\n    const cx = Math.round(innerWidth / 2 - you.x * TILE_SIZE);\n    const cy = Math.round(innerHeight / 2 - you.y * TILE_SIZE);\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n    document.body.style.backgroundPosition = `${cx >> 2}px ${cy >> 2}px`;\n  }\n  getChunk(x, y) {\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    const key = `${chunkX}_${chunkY}`;\n    return (this.chunks[key] =\n      this.chunks[key] || new Chunk(this.el, chunkX, chunkY));\n  }\n  clear() {\n    this.el.replaceChildren();\n    this.chunks = {};\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(tile, worldElement) {\n    super();\n    this.worldElement = worldElement;\n    this.el.classList.add('tile');\n    this.setBackground(tile.type);\n    this.update(tile);\n  }\n  setBackground(type, imageProp = 'image') {\n    this.el.style.background = getBackground(type, imageProp);\n  }\n  update({\n    x,\n    y,\n    dirX = 0,\n    dirY = 0,\n    type,\n    isJumping,\n    isWalking,\n    isPushing,\n    isDigging,\n  }) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * TILE_SIZE}px,${y * TILE_SIZE}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n\n    const image = isDigging\n      ? 'diggingImage'\n      : isJumping\n      ? 'jumpingImage'\n      : isPushing\n      ? 'pushingImage'\n      : isWalking\n      ? 'walkingImage'\n      : 'image';\n    if (image !== this.pImage) {\n      this.pImage = image;\n      this.setBackground(type, image);\n    }\n\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    if (chunkX !== this.chunkX || chunkY !== this.chunkY) {\n      this.chunkX = chunkX;\n      this.chunkY = chunkY;\n      this.worldElement.getChunk(x, y).el.append(this.el);\n    }\n  }\n}\n\nclass BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = value;\n  }\n}\n\nclass CollectibleCounter extends Element {\n  constructor(parentElement, type) {\n    super();\n    this.el.classList.add('collectibleCounter');\n    this.el.innerHTML = `<span></span> <div style=\"background: ${getBackground(\n      type,\n    )}\"></div>`;\n    this.valueEl = this.el.querySelector('span');\n    parentElement.append(this.el);\n  }\n  update(value) {\n    this.valueEl.innerText = value;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    parentElement.append(this.el);\n\n    this.counters = {};\n  }\n  updateCounter(type, value) {\n    if (!this.counters[type.id]) {\n      this.counters[type.id] = new CollectibleCounter(this.el, type);\n    }\n    this.counters[type.id].update(value);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class Dialog extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('dialog');\n\n    this.div = document.createElement('div');\n    this.div.classList.add('dialogContainer');\n    this.el.append(this.div);\n\n    this.hide();\n    parentElement.append(this.el);\n  }\n  say(text) {\n    this.text = text;\n    this.choices = [];\n    this.choiceIndex = 0;\n    this.render();\n    this.el.style.display = 'block';\n    this.isOpen = true;\n  }\n  choice(text, action) {\n    this.choices.push({text, action});\n    this.render();\n  }\n  hasChoices() {\n    return this.choices.length > 0;\n  }\n  next() {\n    if (this.choices.length) {\n      this.choiceIndex = (this.choiceIndex + 1) % this.choices.length;\n      this.render();\n    } else {\n      this.hide();\n    }\n  }\n  renderChoices() {\n    const choices = this.choices\n      .map(\n        ({text}, i) =>\n          `<li ${\n            i === this.choiceIndex ? `class=\"selected\"` : ''\n          }>${text}</li>`,\n      )\n      .join('');\n\n    return choices ? `<ul>${choices}</ul>` : '';\n  }\n  render() {\n    this.div.innerHTML = this.text + this.renderChoices();\n  }\n  choose() {\n    this.hide();\n    this.choices[this.choiceIndex].action();\n  }\n  hide() {\n    this.el.style.display = 'none';\n    this.isOpen = false;\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlCircle extends Element {\n  constructor(parentElement, pressing) {\n    super();\n    this.el.classList.add('controlCircle');\n\n    const move = ({touches, offsetX, offsetY}) => {\n      const size = this.el.clientWidth;\n      const x = (touches ? touches[0].offsetX : offsetX) / size - 0.5;\n      const y = (touches ? touches[0].offsetY : offsetY) / size - 0.5;\n      pressing.left = x < 0;\n      pressing.right = x > 0;\n      pressing.up = y < 0;\n      pressing.down = y > 0;\n      this.el.innerText = JSON.stringify(touches);\n    };\n    const up = () => {\n      pressing.left = false;\n      pressing.up = false;\n      pressing.down = false;\n      pressing.right = false;\n      this.el.removeEventListener('touchmove', move);\n      this.el.removeEventListener('mousemove', move);\n      this.el.removeEventListener('touchend', up);\n      this.el.removeEventListener('mouseup', up);\n    };\n    const down = (e) => {\n      move(e);\n      this.el.addEventListener('touchmove', move);\n      this.el.addEventListener('mousemove', move);\n      this.el.addEventListener('touchend', up);\n      this.el.addEventListener('mouseup', up);\n    };\n\n    this.el.addEventListener('touchstart', down);\n    this.el.addEventListener('mousedown', down);\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlCircle} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'space', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement, additionalControls) {\n    this.pressing = {};\n    this.additionalControls = additionalControls || [];\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      // for (const {id} of controls) {\n      //   new ControlButton(rootElement, id, this.pressing);\n      // }\n\n      new ControlCircle(rootElement, this.pressing, 400);\n    }\n  }\n  getPressing() {\n    let pressing = this.pressing;\n    this.additionalControls.forEach((control) => {\n      pressing = control.getPressing(pressing);\n    });\n    return pressing;\n  }\n}\n","const gamepadSettings = {\n  spaceIndex: 0,\n  jumpIndex: 1,\n  poopIndex: 2,\n  xAxisIndex: 0,\n  yAxisIndex: 1,\n};\n\nexport class GamepadControls {\n  constructor({onPress}) {\n    this.onPress = onPress;\n    this.lastGamepadState = {};\n  }\n  getGamepad() {\n    const gamepads = navigator.getGamepads();\n    for (let index = 0; index < gamepads.length; index++) {\n      if (gamepads[index] != null && gamepads[index].connected) {\n        return gamepads[index];\n      }\n    }\n    return null;\n  }\n  getGamepadState() {\n    const gamepad = this.getGamepad();\n    if (gamepad == null) return undefined;\n\n    return {\n      up:\n        gamepad.axes[gamepadSettings.yAxisIndex] <= -0.5 ||\n        gamepad.buttons[gamepadSettings.jumpIndex].pressed,\n      down: gamepad.axes[gamepadSettings.yAxisIndex] >= 0.5,\n      left: gamepad.axes[gamepadSettings.xAxisIndex] <= -0.25,\n      right: gamepad.axes[gamepadSettings.xAxisIndex] >= 0.25,\n      space: gamepad.buttons[gamepadSettings.spaceIndex].pressed,\n      poop: gamepad.buttons[gamepadSettings.poopIndex].pressed,\n    };\n  }\n  getPressing(incomingPressing) {\n    const gamepadState = this.getGamepadState();\n    if (!gamepadState) return incomingPressing;\n\n    // Merge the incoming pressing state with the gamepad state\n    const pressing = {...incomingPressing};\n\n    const gamepadPress = (id) => {\n      pressing[id] = true;\n      if (!this.lastGamepadState[id]) {\n        this.onPress(id);\n      }\n    };\n\n    if (gamepadState.up) gamepadPress('up');\n    if (gamepadState.down) gamepadPress('down');\n    if (gamepadState.left) gamepadPress('left');\n    if (gamepadState.right) gamepadPress('right');\n    if (gamepadState.space) gamepadPress('space');\n    if (gamepadState.poop) gamepadPress('poop');\n\n    this.lastGamepadState = gamepadState;\n    return pressing;\n  }\n}\n","const useTemplate = (str) => `\nconst GRASS = 'g';\nconst POOP = 'p';\nconst STONE = 's';\nconst WOMBAT = 'w';\nconst MAGMA = 'm';\nconst JEWEL = 'j';\nconst KOALA = 'k';\nconst WATER = 'a';\nconst POLYMER = 'o';\nconst NPC = 'n';\n\nconst say = game.dialog.say.bind(game.dialog);\nconst choice = game.dialog.choice.bind(game.dialog);\nconst playSound = game.playSound.bind(game);\nconst pauseSound = game.pauseSound.bind(game);\nconst loopSound = game.loopSound.bind(game);\nconst jumpTo = game.jumpTo.bind(game);\n\nconst numCollected = game.numCollected.bind(game);\nconst setCollectible = game.setCollectible.bind(game);\n\nconst setPoop = game.setPoop.bind(game);\nconst setHealth = game.setHealth.bind(game);\n\nconst moveTile = game.moveTile.bind(game);\nconst addTile = game.addTile.bind(game);\nconst deleteTile = game.deleteTile.bind(game);\nconst isEmpty = game.isEmpty.bind(game);\nconst getTile = game.getTile.bind(game);\nconst getTileByName = game.getTileByName.bind(game);\nconst damage = game.damage.bind(game);\nconst changeTileType = game.changeTileType.bind(game);\n\nconst you = game.you;\nconst poop = game.poop;\nconst health = game.health;\nconst namedTiles = game.namedTiles;\n\n${str}`;\n\nexport const compile = (str) => {\n  if (!str) return;\n  try {\n    return new Function('game', useTemplate(str));\n  } catch (e) {\n    console.error(`Invalid logic: ${str}`);\n    console.error(e);\n    return;\n  }\n};\n","import {\n  Dialog,\n  Hud,\n  TileElement,\n  VersionElement,\n  WorldElement,\n} from './elements';\nimport {isValidUrl} from '../utils/isValidUrl';\nimport {loadItem} from '../firebase';\nimport {mergeDeepLeft} from '../utils/mergeDeepLeft';\nimport {defaultGameConfig, defaultTileTypes} from '../defaults';\nimport {compile} from './compile';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst pairs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nexport class Game {\n  constructor(rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement);\n    this.dialog = new Dialog(rootElement);\n    new VersionElement(rootElement);\n  }\n  async load(worldId, overrides) {\n    this.loading = true;\n    const {\n      world,\n      tileTypes: overrideTileTypes,\n      gameConfig: overrideGameConfig,\n    } = await loadItem(`worlds/${worldId}`);\n\n    const tileTypes = mergeDeepLeft(overrideTileTypes, defaultTileTypes);\n    const gameConfig = mergeDeepLeft(overrideGameConfig, defaultGameConfig);\n\n    this.setGameBackground(gameConfig.backgroundUrl);\n\n    const typeIndex = {};\n    let youPos;\n    for (const type of Object.values(tileTypes)) {\n      typeIndex[type.id] = type;\n    }\n    for (const key in world) {\n      const {x, y, tileType, onSpace, onTouch, name} = world[key];\n      if (tileType === 'w') {\n        youPos = {x, y};\n        delete world[key];\n      } else if (typeIndex[tileType]) {\n        world[key] = {\n          x,\n          y,\n          type: typeIndex[tileType],\n          onSpace: compile(onSpace),\n          onTouch: compile(onTouch),\n          name,\n        };\n      } else {\n        delete world[key];\n      }\n    }\n\n    if (overrides?.x !== undefined && overrides?.y !== undefined) {\n      youPos.x = overrides.x;\n      youPos.y = overrides.y;\n    }\n\n    this.sounds = this.buildSounds(gameConfig, typeIndex);\n\n    this.worldElement.clear();\n    this.world = {};\n    this.namedTiles = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {\n      x: 0,\n      y: 0,\n      xs: 0,\n      ys: 0,\n      dirX: 1,\n      dirY: 0,\n      type: typeIndex.w,\n      ...youPos,\n    };\n    this.you.el = new TileElement(this.you, this.worldElement);\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.collectibles = overrides?.collectibles || {};\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n    this.airDrag = 0.001;\n\n    for (const x in gameConfig) {\n      if (!isNaN(gameConfig[x])) this[x] = Number(gameConfig[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(overrides?.health || this.health);\n    this.setPoop(overrides?.poop || this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n    this.loading = false;\n    return this;\n  }\n  setGameBackground(backgroundUrl) {\n    document.body.style.backgroundImage = `url(${backgroundUrl})`;\n  }\n  buildSounds(config, typeIndex) {\n    const sounds = {};\n\n    Object.values(typeIndex)\n      .filter((type) => type.sound)\n      .forEach((type) => (sounds[type.id] = new Audio(type.sound)));\n\n    const soundSettingSuffix = 'Sound';\n    Object.keys(config)\n      .filter((key) => key.endsWith(soundSettingSuffix) && config[key])\n      .forEach((key) => {\n        const soundName = key.substring(\n          0,\n          key.length - soundSettingSuffix.length,\n        );\n        sounds[soundName] = new Audio(config[key]);\n      });\n\n    return sounds;\n  }\n  playSound(sound) {\n    if (this.sounds[sound] === undefined && isValidUrl(sound)) {\n      this.sounds[sound] = new Audio(sound);\n    }\n    this.sounds[sound]?.play();\n  }\n  pauseSound(sound) {\n    this.sounds[sound]?.pause();\n  }\n  loopSound(sound) {\n    this.playSound(sound);\n    if (this.sounds[sound]) this.sounds[sound].loop = true;\n  }\n  iterate(pressing) {\n    if (this.loading) return;\n    this.moveWombat(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(tile, this.worldElement),\n    };\n    if (tile.name !== undefined) {\n      this.namedTiles[tile.name] = this.world[`${tile.x}_${tile.y}`];\n    }\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    if (tile.name !== undefined && this.namedTiles[tile.name] !== undefined) {\n      delete this.namedTiles[tile.name];\n    }\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  changeTileType(tile, type) {\n    tile.type = type;\n    delete tile.hp;\n    tile.el.setBackground(type);\n  }\n  moveWombat(pressing) {\n    const {you, world} = this;\n    const lastSwimBlock = you.swimBlock;\n\n    you.isPushing = false;\n    you.isWalking = false;\n    you.isDigging = false;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n      you.isWalking = true;\n    }\n    if (pressing.right) {\n      you.xs += you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n      you.isWalking = true;\n    }\n    if (pressing.up) {\n      if (you.swimBlock) you.ys -= this.swimPower;\n      else if (!you.isJumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.isJumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimBlock) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimBlock ? this.waterDrag : this.moveDeceleration);\n\n    you.y += you.ys;\n    you.ys *= 1 - (you.swimBlock ? this.waterDrag : this.airDrag);\n    you.ys += this.gravity * (1 - (you.swimBlock?.type.density || 0));\n\n    const seen = {};\n    for (const [fx, fy] of pairs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    delete you.swimBlock;\n    for (const [fx, fy] of pairs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.collect(block.type.id);\n        return this.deleteTile(block);\n      }\n      if (block.type.healing < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimBlock = block;\n    }\n    if (you.swimBlock && you.swimBlock !== lastSwimBlock) {\n      this.playSound(you.swimBlock.type.id);\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (pressing.space) {\n      you.isDigging = true;\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        this.damage(b, this.eatSpeed);\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n        this.playSound(b.type.id);\n      }\n      if (b?.type.diggable) {\n        this.damage(b, this.digSpeed);\n      }\n    }\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY ||\n      you.isDigging !== you.pIsDigging ||\n      you.isJumping !== you.pIsJumping ||\n      you.isPushing !== you.pIsPushing ||\n      you.isWalking !== you.pIsWalking\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n      you.pIsDigging = you.isDigging;\n      you.pIsJumping = you.isJumping;\n      you.pIsPushing = you.isPushing;\n      you.pIsWalking = you.isWalking;\n    }\n  }\n  // returns true if block is destroyed\n  damage(block, amount) {\n    if (!block?.type.hp) return;\n    if (block.hp === undefined) block.hp = block.type.hp;\n\n    block.hp -= amount;\n\n    if (block.hp <= 0) {\n      if (block.type.dropsLoot) {\n        this.changeTileType(block, this.typeIndex[block.type.dropsLoot]);\n      } else this.deleteTile(block);\n\n      return true;\n    }\n  }\n  resolveCollision(block) {\n    const {you} = this;\n\n    this.processOnTouch(block);\n\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    if (block.type.healing < 0) {\n      this.setHealth(this.health + Number(block.type.healing));\n      this.playSound(block.type.id);\n      you.y -= 0.1;\n    }\n\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (!you.isJumping && you.ys === this.gravity) {\n        you.isPushing = true;\n        if (block.type.movable && this.isEmpty(block.x + dx, block.y)) {\n          this.moveTile(block.x, block.y, dx, 0);\n        }\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n      you.isWalking = false;\n    } else {\n      if (you.y < block.y) you.isJumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        const damage = (you.ys - this.fallDamageMin) * this.fallDamageMult;\n        this.setHealth(this.health - damage);\n        this.playSound('fallDamage');\n\n        const blockDamage = Math.min(\n          damage,\n          block.hp || Infinity,\n          block.type.hp || Infinity,\n        );\n        if (this.damage(block, damage)) {\n          you.ys /= 1 + blockDamage;\n          return;\n        }\n      }\n      you.ys = 0;\n    }\n  }\n  processOnTouch(block) {\n    // If the block being touched has an onTouch handler\n    if (block.onTouch) {\n      this.currentBlockTouch = block;\n      // Don't run onTouch if this is the same block as last time\n      if (this.lastBlockTouch !== block) {\n        block.onTouch(this);\n      }\n    }\n    this.lastBlockTouch = this.currentBlockTouch;\n    this.currentBlockTouch = undefined;\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  getTileByName(tileName) {\n    return this.namedTiles[tileName];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && t.type.moveStyle !== 'liquid';\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        Math.abs(this.you.x - b.x) > MAX_RENDER_DIST ||\n        Math.abs(this.you.y - b.y) > MAX_RENDER_DIST\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n\n      // special rules for magma\n      if (b.type.id === 'm') {\n        let touchingWater = false;\n        for (const [dx, dy] of dirs) {\n          const block = this.getTile(b.x + dx, b.y + dy);\n          if (block && (block.type.hp || block.type.id === 'a')) {\n            if (block.type.id === 'a') touchingWater = true;\n            this.deleteTile(block);\n          }\n        }\n        if (touchingWater) {\n          // if lava touches water, it turns to stone\n          this.changeTileType(b, this.typeIndex.s);\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      Math.ceil(this.health),\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red',\n    );\n    if (health <= 0) {\n      this.playSound('gameOver');\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  numCollected(id) {\n    return this.collectibles[id] || 0;\n  }\n  setCollectible(typeId, amount) {\n    this.collectibles[typeId] = amount;\n    this.hud.updateCounter(this.typeIndex[typeId], amount);\n  }\n  collect(typeId) {\n    this.setCollectible(typeId, this.numCollected(typeId) + 1);\n    this.playSound(typeId);\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(Math.floor(this.poop), this.maxPoop, 'saddleBrown');\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n      this.playSound('p');\n    }\n  }\n  updateViewport() {\n    this.worldElement.update(this.you);\n  }\n  interact() {\n    const {you} = this;\n    const angle = Math.atan2(you.dirY, you.dirX);\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    this.getTile(x, y)?.onSpace?.(this);\n  }\n  async jumpTo(worldId) {\n    await this.load(worldId, {\n      health: this.health,\n      poop: this.poop,\n      collectibles: this.collectibles,\n    });\n  }\n}\n","export const isValidUrl = (urlString) => {\n  const urlPattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // validate protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // validate domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // validate OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // validate port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // validate query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // validate fragment locator\n  return !!urlPattern.test(urlString);\n};\n","import {defaultWorldId} from '../firebase';\nimport {isGuid} from '../utils';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldId = isGuid(hashConfig?.worldId)\n    ? hashConfig.worldId\n    : defaultWorldId;\n\n  const game = new Game(rootElement);\n  return await game.load(worldId, hashConfig);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type, prop = 'image') => {\n  const url = type?.[prop] || type?.image;\n  return url ? `no-repeat center/contain url(${url})` : type?.color;\n};\n","export const mergeDeepLeft = (a, b) => {\n  if (a === undefined) return b;\n  if (b === undefined) return a;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const result = {};\n    for (const key in {...a, ...b}) {\n      result[key] = mergeDeepLeft(a[key], b[key]);\n    }\n    return result;\n  }\n  return a;\n};\n"],"names":["defaultGameConfig","airDrag","digSpeed","eatSpeed","fallDamageMin","fallDamageMult","fallDamageSound","gameOverSound","gravity","health","jumpPower","maxHealth","maxPoop","moveDeceleration","moveSpeed","poop","swimPower","waterDrag","backgroundUrl","defaultTileTypes","color","diggable","edible","healing","hp","id","image","label","makePoop","order","sound","density","movable","moveDelay","walkingImage","pushingImage","jumpingImage","diggingImage","crouchingImage","moveStyle","collectible","dropsLoot","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadItem","key","get","child","val","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","toChunkCoords","y","Math","floor","Element","this","el","document","createElement","remove","Chunk","parentElement","classList","add","append","shouldShow","abs","title","isShowing","style","display","WorldElement","rootElement","chunks","you","chunkX","chunkY","updateVisibility","cx","round","innerWidth","cy","innerHeight","transform","body","backgroundPosition","replaceChildren","TileElement","tile","worldElement","setBackground","type","imageProp","background","getBackground","dirX","dirY","isJumping","isWalking","isPushing","isDigging","angle","atan2","PI","flip","pImage","getChunk","BarElement","valueElement","value","maxValue","width","innerText","CollectibleCounter","innerHTML","valueEl","querySelector","Hud","healthBar","poopBar","counters","VersionElement","packageJSON","Dialog","div","hide","text","choices","choiceIndex","render","isOpen","action","push","length","map","i","join","renderChoices","controlIndex","indexBy","c","code","Controls","additionalControls","onPress","pressing","keydown","addEventListener","forEach","control","getPressing","gamepadSettings","GamepadControls","lastGamepadState","gamepads","navigator","getGamepads","index","connected","gamepad","getGamepad","up","axes","buttons","pressed","down","left","right","space","incomingPressing","gamepadState","getGamepadState","gamepadPress","compile","str","Function","useTemplate","pairs","ceil","dirs","Game","hud","dialog","worldId","overrides","loading","world","overrideTileTypes","tileTypes","overrideGameConfig","gameConfig","mergeDeepLeft","setGameBackground","typeIndex","Object","values","tileType","onSpace","onTouch","name","youPos","undefined","sounds","buildSounds","clear","namedTiles","addTile","xs","ys","w","collectibles","frame","isNaN","Number","setHealth","setPoop","backgroundImage","config","filter","Audio","soundSettingSuffix","keys","endsWith","soundName","substring","urlString","RegExp","test","play","pause","playSound","loop","moveWombat","iterateTiles","destroy","lastSwimBlock","swimBlock","reload","seen","fx","fy","resolveCollision","damage","block","collect","deleteTile","max","cos","sin","b","getTile","px","py","pdirX","pdirY","pIsDigging","pIsJumping","pIsPushing","pIsWalking","amount","changeTileType","processOnTouch","dx","isEmpty","moveTile","blockDamage","min","Infinity","currentBlockTouch","lastBlockTouch","tileName","t","dy","random","badGuyCanWalkOn","touchingWater","s","typeId","updateCounter","setCollectible","numCollected","p","load","hash","hashConfig","JSON","parse","atob","slice","log","isGuid","isPaused","hasFocus","opacity","controlState","iterate","requestAnimationFrame","init","hasChoices","choose","next","interact","updateViewport","dissoc","obj","copy","guid","Date","now","toString","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running","prop","url","a","result"],"sourceRoot":""}